{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"editView": {
		"prefix": "editView",
		"body": [
			"import React from 'react';",
			"import DefaultEditView from '@/components/DefaultEditView';",
			"import { Form } from 'antd';",
			"import HInput from '@/components/Antd/HInput';",
			"import { connect } from 'dva';",
			"",
			"@connect(({ loading }) => ({",
			"loading",
			"}))",
			"class $1 extends DefaultEditView {",
			"constructor(props) {",
			"super(props, \"$3\", \"$2\");",
			"}",
			"",
			"createFormItemList() {",
			"const { getFieldDecorator } = this.props.form;",
			"return [",
			"{",
			"label: '预警标题',",
			"content: getFieldDecorator('a')(<HInput />),",
			"},",
			"];",
			"}",
			"}",
			"export default Form.create()($1);",
		],
		"description": "编辑页面"
	}
}